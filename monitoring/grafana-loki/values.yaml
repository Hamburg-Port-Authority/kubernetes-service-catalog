loki:
  # -- Deployment mode lets you specify how to deploy Loki.
  # There are 3 options:
  # - SingleBinary: Loki is deployed as a single binary, useful for small installs typically without HA, up to a few tens of GB/day.
  # - SimpleScalable: Loki is deployed as 3 targets: read, write, and backend. Useful for medium installs easier to manage than distributed, up to a about 1TB/day.
  # - Distributed: Loki is deployed as individual microservices. The most complicated but most capable, useful for large installs, typically over 1TB/day.
  # There are also 2 additional modes used for migrating between deployment modes:
  # - SingleBinary<->SimpleScalable: Migrate from SingleBinary to SimpleScalable (or vice versa)
  # - SimpleScalable<->Distributed: Migrate from SimpleScalable to Distributed (or vice versa)
  # Note: SimpleScalable and Distributed REQUIRE the use of object storage.
  deploymentMode: SimpleScalable
  loki:
    containerSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
    # -- Limits config
    limits_config:
      retention_period: 192h
    # -- Storage config. Providing this will automatically populate all necessary storage configs in the templated config.
    storage:
      bucketNames:
        chunks: prometheus-playg
        ruler: prometheus-playg
        admin: prometheus-playg
      type: 's3'
      s3:
        s3: null
        s3forcepathstyle: "true"
        # endpoint: "${grafana-loki-s3-endpoint}"
        # accessKeyId: "${grafana-loki-s3-accessKeyId}"
        # secretAccessKey: "${grafana-loki-s3-secretAccessKey}"
        endpoint: "'${GRAFANA-LOKI-S3-ENDPOINT}'"
        accessKeyId: "'${GRAFANA-LOKI-S3-ACCESKEYID}'"
        secretAccessKey: "'${GRAFANA-LOKI-S3-SECRETACCESSKEY}'"
        insecure: "true"  
        http_config: 
          insecure_skip_verify: true
    schemaConfig:
      configs:
        - from: "2023-07-01"
          index:
            period: 24h
            prefix: loki_index_
          object_store: s3
          schema: v13
          store: tsdb

  serviceAccount:
    create: true
    automountServiceAccountToken: true
  monitoring:
    dashboards:
      enabled: true
      namespace: null
      labels:
        grafana_dashboard: "1"
    rules:
      enabled: true
      alerting: true
    serviceMonitor:
      enabled: true
      interval: 15s
      scrapeTimeout: null
      scheme: http
      metricsInstance:
        enabled: true
    selfMonitoring:
      enabled: false
      tenant:
        name: "self-monitoring"
        secretNamespace: "{{ .Release.Namespace }}"
      grafanaAgent:
        installOperator: false
        enableConfigReadAPI: false
    lokiCanary:
      enabled: true

  write:
    # extraArgs:
    #   - -config.expand-env=true
      # -- Environment variables to add to the backend pods
    extraEnv: []
    # -- Environment variables from secrets or configmaps to add to the backend pods
    # extraEnvFrom: 
    #   - secretRef:
    #       name: external-secret-loki
    extraArgs:
      - '-config.expand-env=true'
      - '-log.level=debug'
      - '-print-config-stderr'
    # extraEnv:
    #   - name: GRAFANA-LOKI-S3-ENDPOINT
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-endpoint
    #   - name: GRAFANA-LOKI-S3-ACCESSKEYID
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-accessKeyId
    #   - name: GRAFANA-LOKI-S3-SECRETACCESSKEY
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-secretAccessKey
    extraEnv:
      - name: GRAFANA-LOKI-S3-ENDPOINT
        value: "test123"
      - name: GRAFANA-LOKI-S3-ACCESSKEYID
        value: "2313234"
      - name: GRAFANA-LOKI-S3-SECRETACCESSKEY
        value: "qasfd"

  read:
    # extraArgs:
    #   - -config.expand-env=true
    extraEnv: []
    # -- Environment variables from secrets or configmaps to add to the backend pods
    extraEnvFrom: 
      - secretRef:
          name: external-secret-loki
    extraArgs:
      - '-config.expand-env=true'
      - '-log.level=debug'
      - '-print-config-stderr'
    # extraEnv:
    #   - name: GRAFANA-LOKI-S3-ENDPOINT
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-endpoint
    #   - name: GRAFANA-LOKI-S3-ACCESSKEYID
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-accessKeyId
    #   - name: GRAFANA-LOKI-S3-SECRETACCESSKEY
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-secretAccessKey
  backend:
    replicas: 3
    persistence:
      enableStatefulSetAutoDeletePVC: true
      size: 10Gi
      extraEnv: []
      # -- Environment variables from secrets or configmaps to add to the backend pods
    extraEnvFrom: 
      - secretRef:
          name: external-secret-loki
    extraArgs:
      - '-config.expand-env=true'
      - '-log.level=debug'
      - '-print-config-stderr'
    # extraEnv:
    #   - name: GRAFANA-LOKI-S3-ENDPOINT
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-endpoint
    #   - name: GRAFANA-LOKI-S3-ACCESSKEYID
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-accessKeyId
    #   - name: GRAFANA-LOKI-S3-SECRETACCESSKEY
    #     valueFrom:
    #       secretKeyRef:
    #         name: external-secret-loki
    #         key: grafana-loki-s3-secretAccessKey

  memberlist:
    service:
      publishNotReadyAddresses: true
  gateway:
    enabled: true
    replicas: 2
    verboseLogging: true
    containerSecurityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30

  chunksCache:
    # -- Amount of memory allocated to chunks-cache for object storage (in MB).
    allocatedMemory: 4096

  sidecar:
    securityContext:
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL

  memcached:
    podSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      fsGroup: 10001
      runAsGroup: 10001
      runAsNonRoot: true
      runAsUser: 10001
    containerSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
  memcachedExporter:
    containerSecurityContext:
      seccompProfile:
        type: RuntimeDefault
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
