loki:
  loki:
    server:
      http_listen_port: 3100
      grpc_listen_port: 9095
    # -- Limits config
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      retention_period: 192h
    # -- Provides a reloadable runtime configuration file for some specific configuration
    runtimeConfig: {}
    # -- Check https://grafana.com/docs/loki/latest/configuration/#common_config for more info on how to provide a common configuration
    commonConfig:
      path_prefix: /var/loki
      replication_factor: 3
      compactor_address: '{{ include "loki.compactorAddress" . }}'
    # -- Storage config. Providing this will automatically populate all necessary storage configs in the templated config.
    storage:
      bucketNames:
        chunks: chunks
        ruler: ruler
        admin: admin
      type: 's3'
      s3:
        s3: null
        endpoint: https://minio.minio-loki
        region: 
        secretAccessKey: null
        accessKeyId: null
        s3ForcePathStyle: true
        insecure: true
        http_config:
          insecure_skip_verify: true
    compactor:
      retention_enabled: true
      retention_delete_delay: 2h
      compaction_interval: 10m
      retention_delete_worker_count: 150

  serviceAccount:
    create: true
    automountServiceAccountToken: true
  rbac:
    pspEnabled: true
    sccEnabled: false
  test:
    enabled: false
    prometheusAddress: "http://prometheus:9090"
    timeout: 1m
    image:
      registry: docker.io
      repository: grafana/loki-helm-test
  monitoring:
    dashboards:
      enabled: true
      namespace: null
      labels:
        grafana_dashboard: "1"
    rules:
      enabled: true
      alerting: true
    serviceMonitor:
      enabled: true
      interval: 15s
      scrapeTimeout: null
      scheme: http
      metricsInstance:
        enabled: true
    selfMonitoring:
      enabled: false
      tenant:
        name: "self-monitoring"
        secretNamespace: "{{ .Release.Namespace }}"
      grafanaAgent:
        installOperator: false
        enableConfigReadAPI: false
    lokiCanary:
      enabled: true
      image:
        registry: docker.io
        repository: grafana/loki-canary
  write:
    replicas: 3
    podManagementPolicy: OrderedReady
    targetModule: "write"
    terminationGracePeriodSeconds: 300
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.writeSelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
    persistence:
      enableStatefulSetAutoDeletePVC: false
      size: 5Gi
  tableManager:
    enabled: false
    terminationGracePeriodSeconds: 30
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.tableManagerSelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  {{- include "loki.tableManagerSelectorLabels" . | nindent 12 }}
              topologyKey: failure-domain.beta.kubernetes.io/zone
  read:
    replicas: 3
    podManagementPolicy: Parallel
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      targetCPUUtilizationPercentage: 60
      targetMemoryUtilizationPercentage:
    targetModule: "read"
    legacyReadTarget: true
    terminationGracePeriodSeconds: 30
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.readSelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
    persistence:
      enableStatefulSetAutoDeletePVC: true
      size: 10Gi
  backend:
    replicas: 3
    podManagementPolicy: OrderedReady
    targetModule: "backend"
    terminationGracePeriodSeconds: 300
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.backendSelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
    persistence:
      enableStatefulSetAutoDeletePVC: false
      size: 10Gi
  ingress:
    enabled: false
    ingressClassName: ""
    annotations: {}
    #    nginx.ingress.kubernetes.io/auth-type: basic
    #    nginx.ingress.kubernetes.io/auth-secret: loki-distributed-basic-auth
    #    nginx.ingress.kubernetes.io/auth-secret-type: auth-map
    #    nginx.ingress.kubernetes.io/configuration-snippet: |
    #      proxy_set_header X-Scope-OrgID $remote_user;
    paths:
      write:
        - /api/prom/push
        - /loki/api/v1/push
      read:
        - /api/prom/tail
        - /loki/api/v1/tail
        - /loki/api
        - /api/prom/rules
        - /loki/api/v1/rules
        - /prometheus/api/v1/rules
        - /prometheus/api/v1/alerts
      singleBinary:
        - /api/prom/push
        - /loki/api/v1/push
        - /api/prom/tail
        - /loki/api/v1/tail
        - /loki/api
        - /api/prom/rules
        - /loki/api/v1/rules
        - /prometheus/api/v1/rules
        - /prometheus/api/v1/alerts
    hosts:
      - loki.example.com
    tls: []

  memberlist:
    service:
      publishNotReadyAddresses: true
  gateway:
    enabled: true
    replicas: 2
    verboseLogging: true
    podSecurityContext:
      fsGroup: 101
      runAsGroup: 101
      runAsNonRoot: true
      runAsUser: 101
    containerSecurityContext:
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
    terminationGracePeriodSeconds: 30
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                {{- include "loki.gatewaySelectorLabels" . | nindent 10 }}
            topologyKey: kubernetes.io/hostname
